{"version":3,"sources":["store/api/index.js","store/api/findLocationByLatLng.js","store/api/findWeatherById.js","store/actions.js","store/sagas/Weather.js","store/sagas/ApiErrors.js","store/sagas/index.js","store/reducers/Weather.js","components/Weather.js","components/Header.js","components/Wrapper.js","components/NowWhat.js","App.js","store/index.js","serviceWorker.js","index.js"],"names":["api","findLocationByLatLng","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","latitude","longitude","latlon","response","json","wrap","_context","prev","next","join","fetch","concat","sent","ok","abrupt","error","code","status","data","stop","this","_x","_x2","apply","arguments","findWeatherbyId","id","FETCH_WEATHER","API_ERROR","WEATHER_DATA_RECEIVED","WEATHER_ID_RECEIVED","watchWeatherIdReceived","watchFetchWeather","watchAppLoad","determineDroneLatAndLong","l","length","metric","metricsData","action","_ref2","_context2","payload","call","API","put","type","actions","cancel","_marked","_ref3","error1","_ref4","location","_context3","console","log","woeid","_marked2","_context4","all","takeEvery","_marked3","sagas_Weather","apiErrorReceived","watchApiError","toast","ApiErrors_marked","ApiErrors_marked2","ApiErrors","sagas","toConsumableArray","WeatherSagas","initialState","loading","weatherId","name","temperature","weather_state_name","handlers","_handlers","defineProperty","state","objectSpread","_action$payload","c","weather","consolidated_weather","the_temp","title","temperatureinCelsius","temperatureinFahrenheit","reducers_Weather","undefined","handler","Chip","withStyles","theme","root","background","palette","secondary","main","label","color","primary","ChipRaw","Weather","_this","props","onLoad","interval","setInterval","clearInterval","_this$props","react_default","createElement","Weather_Chip","Component","connect","ownProps","_state$weather","dispatch","grow","flexGrow","classes","AppBar_default","position","Toolbar_default","Typography_default","variant","className","components_Weather","wrapper","height","children","CardHeader","CardHeaderRaw","Avatar","AvatarRaw","MyMap","withScriptjs","withGoogleMap","defaultProps","center","lat","lng","zoom","Card_default","react_google_maps_lib","defaultCenter","defaultZoom","parseFloat","details","card","margin","_props$details","map","line","timestamp","Date","toLocaleTimeString","style","display","flexWrap","alignItems","justifyContent","NowWhat_CardHeader","CardContent_default","googleMapURL","loadingElement","width","containerElement","mapElement","LineChart","top","right","bottom","left","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","YAxis","domain","Tooltip","minWidth","List_default","ListItem_default","NowWhat_Avatar","ListItemText_default","store","rootReducer","combineReducers","weatherReducer","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","applyMiddleware","createStore","forEach","run","createMuiTheme","typography","useNextVariants","App","styles","CssBaseline_default","react_redux_es","components_Wrapper","components_Header","components_NowWhat","lib","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57ee6907.chunk.js","sourcesContent":["import findLocationByLatLng from './findLocationByLatLng';\nimport findWeatherbyId from './findWeatherById';\n\nexport default {\n  findLocationByLatLng,\n  findWeatherbyId\n};\n","import 'isomorphic-fetch';\n\nconst findLocationByLatLong = async (latitude, longitude) => {\n  const latlon = [latitude, longitude].join(',');\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/search/?lattlong=${latlon}`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findLocationByLatLong;\n","import 'isomorphic-fetch';\n\nconst findWeatherbyId = async id => {\n  // Using the create-react-app's proxy for CORS issues\n  const response = await fetch(\n    `https://react-assessment-api.herokuapp.com/api/weather/location/${id}/`\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  return { data: json };\n};\n\nexport default findWeatherbyId;\n","export const FETCH_WEATHER = 'COMMAND/FETCH_WEATHER_FOR_LAT_LNG';\nexport const API_ERROR = 'EVENT/API_ERROR_RECEIVED';\nexport const WEATHER_DATA_RECEIVED = 'EVENT/WEATHER_DATA_RECEIVED';\nexport const WEATHER_ID_RECEIVED = 'EVENT/WEATHER_ID_RECEIVED';\nexport const FETCH_DRONE = 'COMMAND/FETCH_DRONE';\n\n// export const determineDroneLatAndLong = () => async dispatch => {\n//   const response = await jsonPlaceholder.get('/posts');\n//   dispatch({ type: 'FETCH_POSTS', payload: response.data });\n// };\n\n// export const determineDroneLatAndLong = () => async dispatch\n\n// const mapDispatch = dispatch => ({\n//   onLoad: () =>\n//     dispatch({\n//       type: actions.FETCH_WEATHER,\n//       longitude: 56, //Should get its data from state\n//       latitude: 65 // Should Get its data from state\n//     })\n// });\n\n// export const determineDroneLatAndLong = async dispatch => {\n//   const response = await fetch(\n//     'https://react-assessment-api.herokuapp.com/api/drone'\n//   );\n//   if (!response.ok) {\n//     return { error: { code: response.status } };\n//   }\n//   const json = await response.json();\n//   let l = json.data.length - 1;\n//   dispatch({\n//     type: 'FETCH_DRONE',\n//     payload: { lat: json.data[l].latitude, lon: json.data[l].longitude }\n//   });\n//   // return { lat: json.data[l].latitude, lon: json.data[l].longitude };\n// };\n\n// export const determineDroneLatAndLong = async dispatch => {\n//   const response = await fetch(\n//     'https://react-assessment-api.herokuapp.com/api/drone'\n//   );\n//   if (!response.ok) {\n//     return { error: { code: response.status } };\n//   }\n//   const json = await response.json();\n//   let l = json.data.length - 1;\n//   return {\n//     type: 'FETCH_DRONE',\n//     payload: { lat: json.data[l].latitude, lon: json.data[l].longitude }\n//   };\n// };\n","import { takeEvery, call, put, cancel, all } from 'redux-saga/effects';\nimport API from '../api';\nimport * as actions from '../actions';\n\n/*\n  1. The weather service requires us to make a search by lat/lng to find its\n  weather ID.\n  2. We then use that weather ID to get the weather.\n\n  This process is pretty well defined here with a saga.\n\n  call invokes a method\n  put dispatches an action\n  takeEvery watches actions and executes a function\n\n  Also -- the `*` in function is important; turns it into a \"generator\"\n\n*/\n\nconst determineDroneLatAndLong = async () => {\n  const response = await fetch(\n    'https://react-assessment-api.herokuapp.com/api/drone'\n  );\n  if (!response.ok) {\n    return { error: { code: response.status } };\n  }\n  const json = await response.json();\n  let l = json.data.length - 1;\n  return {\n    metric: json.data[l].metric,\n    latitude: json.data[l].latitude,\n    longitude: json.data[l].longitude,\n    metricsData: json.data\n  };\n};\n\nfunction* watchWeatherIdReceived(action) {\n  const { id } = action.payload;\n  const { error, data } = yield call(API.findWeatherbyId, id);\n  if (error) {\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  yield put({ type: actions.WEATHER_DATA_RECEIVED, data });\n}\n\nfunction* watchFetchWeather(action) {\n  const { error1, latitude, longitude, metric, metricsData } = yield call(\n    determineDroneLatAndLong\n  );\n  if (error1) {\n    console.log({ error1 });\n    yield put({ type: actions.API_ERROR, code: error1.code });\n    yield cancel();\n    return;\n  }\n  const { error, data } = yield call(\n    API.findLocationByLatLng,\n    latitude,\n    longitude\n  );\n  if (error) {\n    console.log({ error });\n    yield put({ type: actions.API_ERROR, code: error.code });\n    yield cancel();\n    return;\n  }\n  const location = data[0] ? data[0].woeid : false;\n  if (!location) {\n    yield put({ type: actions.API_ERROR });\n    yield cancel();\n    return;\n  }\n  yield put({\n    type: actions.WEATHER_ID_RECEIVED,\n    payload: { id: location, longitude, latitude, metric, metricsData }\n  });\n}\n\nfunction* watchAppLoad() {\n  yield all([\n    takeEvery(actions.FETCH_WEATHER, watchFetchWeather),\n    takeEvery(actions.WEATHER_ID_RECEIVED, watchWeatherIdReceived)\n  ]);\n}\n\nexport default [watchAppLoad];\n","import { takeEvery, call } from \"redux-saga/effects\";\nimport * as actions from \"../actions\";\nimport { toast } from \"react-toastify\";\n\nfunction* apiErrorReceived(action) {\n  yield call(toast.error, `Error Received: ${action.code}`);\n}\n\nfunction* watchApiError() {\n  yield takeEvery(actions.API_ERROR, apiErrorReceived);\n}\n\nexport default [watchApiError];\n","import WeatherSagas from \"./Weather\";\nimport ApiErrors from \"./ApiErrors\";\n\nexport default [...ApiErrors, ...WeatherSagas];\n","import * as actions from '../actions';\n\nconst initialState = {\n  loading: false,\n  weatherId: null,\n  name: '',\n  temperature: '',\n  weather_state_name: '',\n  latitude: null,\n  longitude: null,\n  metric: null,\n  metricsData: [],\n  data: {}\n};\n\nconst toF = c => (c * 9) / 5 + 32;\n\nconst startLoading = (state, action) => {\n  return { ...state, loading: true };\n};\n\nconst weatherIDReceived = (state, action) => {\n  const { id, longitude, latitude, metric, metricsData } = action.payload;\n  return { ...state, weatherId: id, longitude, latitude, metric, metricsData };\n};\n\nconst weatherDataRecevied = (state, action) => {\n  const { data } = action;\n  if (!data['consolidated_weather']) return state;\n  const weather = data.consolidated_weather[0];\n  const { weather_state_name, the_temp } = weather;\n  const { title: name } = data;\n\n  return {\n    ...state,\n    loading: false,\n    temperatureinCelsius: the_temp,\n    temperatureinFahrenheit: toF(the_temp),\n    weather_state_name,\n    name,\n    data: action.data\n  };\n};\n\nconst handlers = {\n  [actions.FETCH_WEATHER]: startLoading,\n  [actions.WEATHER_ID_RECEIVED]: weatherIDReceived,\n  [actions.WEATHER_DATA_RECEIVED]: weatherDataRecevied\n};\n\nexport default (state = initialState, action) => {\n  const handler = handlers[action.type];\n  if (typeof handler === 'undefined') return state;\n  return handler(state, action);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\nimport ChipRaw from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.secondary.main\n  },\n  label: {\n    color: theme.palette.primary.main\n  }\n});\nconst Chip = withStyles(cardStyles)(ChipRaw);\n\nclass Weather extends Component {\n  componentDidMount() {\n    this.props.onLoad();\n    this.interval = setInterval(() => {\n      this.props.onLoad();\n    }, 4000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { name, weather_state_name, temperatureinFahrenheit } = this.props;\n    return (\n      <Chip\n        label={`Weather in ${name}: ${weather_state_name} and ${temperatureinFahrenheit}°`}\n      />\n    );\n  }\n}\n\nconst mapState = (state, ownProps) => {\n  const {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit,\n    latitude\n  } = state.weather;\n  return {\n    loading,\n    name,\n    weather_state_name,\n    temperatureinFahrenheit,\n    latitude\n  };\n};\n\nconst mapDispatch = dispatch => ({\n  onLoad: () =>\n    dispatch({\n      type: actions.FETCH_WEATHER\n    })\n});\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Weather);\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { withStyles } from '@material-ui/core/styles';\nimport Weather from './Weather';\n\nconst styles = {\n  grow: {\n    flexGrow: 1\n  }\n};\n\nconst Header = props => {\n  const { classes } = props;\n\n  const name = \"Suhrab Kurbanov's\";\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          {name} EOG React Visualization Assessment\n        </Typography>\n        <Weather />\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  wrapper: {\n    background: theme.palette.background.main,\n    height: \"100vh\"\n  }\n});\n\nconst Wrapper = props => {\n  const { classes } = props;\n  return <div className={classes.wrapper}>{props.children}</div>;\n};\n\nexport default withStyles(styles)(Wrapper);\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeaderRaw from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport AvatarRaw from '@material-ui/core/Avatar';\nimport { connect } from 'react-redux';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from 'react-google-maps';\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip\n} from 'recharts';\n\nconst cardStyles = theme => ({\n  root: {\n    background: theme.palette.primary.main\n  },\n  title: {\n    color: 'white'\n  }\n});\nconst CardHeader = withStyles(cardStyles)(CardHeaderRaw);\n\nconst avatarStyles = theme => ({\n  root: {\n    background: theme.palette.primary.main\n  },\n  title: {\n    color: 'white'\n  }\n});\nconst Avatar = withStyles(avatarStyles)(AvatarRaw);\n\nconst styles = {\n  card: {\n    margin: '1% 1%'\n    // width: '700px',\n    // height: '500px'\n  }\n};\n\nconst convertToHours = timestamp => {\n  const ts = new Date(timestamp);\n  return ts.toLocaleTimeString();\n};\n\nconst NowWhat = props => {\n  const { classes } = props;\n  const { latitude, longitude, metric, metricsData } = props.details;\n  const data = metricsData.map(line => {\n    return {\n      timestamp: convertToHours(line['timestamp']),\n      metric: line['metric']\n    };\n  });\n  // console.log(data);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'space-around'\n      }}>\n      <Card className={classes.card}>\n        <CardHeader title=\"RealTime Visualization of Drone's Location\" />\n        <CardContent>\n          <MyMap\n            latitude={latitude}\n            longitude={longitude}\n            googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCSrmQ2sJuZJGraZ3RYVGtqDaykygpVA6g&v=3.exp&libraries=geometry,drawing,places\"\n            loadingElement={<div style={{ width: '100%', height: '100%' }} />}\n            containerElement={\n              <div style={{ width: '650px', height: '400px' }} />\n            }\n            mapElement={<div style={{ width: '100%', height: `100%` }} />}\n          />\n        </CardContent>\n      </Card>\n      <Card className={classes.card}>\n        <CardHeader title=\"RealTime Graphical Visualization of Drone's Temp\" />\n        <CardContent>\n          <LineChart\n            width={650}\n            height={400}\n            data={data}\n            margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n            <Line type=\"monotone\" dataKey=\"metric\" stroke=\"black\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey={'timestamp'} />\n            <YAxis type=\"number\" domain={['dataMax - 200', 'auto']} />\n            <Tooltip />\n          </LineChart>\n        </CardContent>\n      </Card>\n      <Card\n        className={classes.card}\n        style={{ minWidth: '700px', height: '500px' }}>\n        <CardHeader title=\"RealTime Information of the Drone\" />\n        <CardContent>\n          <List>\n            <ListItem>\n              <Avatar>1</Avatar>\n              <ListItemText\n                primary={`Temperature: ${metric || '249.20709327988456'}`}\n              />\n            </ListItem>\n            <ListItem>\n              <Avatar>2</Avatar>\n              <ListItemText\n                primary={`Latitude: ${latitude || '28.492074543952448'}`}\n              />\n            </ListItem>\n            <ListItem>\n              <Avatar>3</Avatar>\n              <ListItemText\n                primary={`Longitude: ${longitude || '-95.4928720669904'}`}\n              />\n            </ListItem>\n            <ListItem>\n              <Avatar>4</Avatar>\n              <ListItemText primary={'Last Received: 2 seconds ago'} />\n            </ListItem>\n          </List>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst MyMap = withScriptjs(\n  withGoogleMap(({ latitude, longitude }) => {\n    const defaultProps = {\n      center: {\n        lat: 31.11,\n        lng: -100\n      },\n      zoom: 4\n    };\n    return (\n      <Card>\n        <GoogleMap\n          defaultCenter={defaultProps.center}\n          defaultZoom={defaultProps.zoom}>\n          <Marker\n            position={{ lat: parseFloat(latitude), lng: parseFloat(longitude) }}\n          />\n        </GoogleMap>\n      </Card>\n    );\n  })\n);\n\nconst mapStateToProps = state => {\n  return { details: state.weather };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(NowWhat));\n","import React from 'react';\nimport createStore from './store';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/Header';\nimport Wrapper from './components/Wrapper';\nimport NowWhat from './components/NowWhat';\n\nconst store = createStore();\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true\n  },\n  palette: {\n    primary: {\n      main: 'rgb(39,49,66)'\n    },\n    secondary: {\n      main: 'rgb(197,208,222)'\n    },\n    background: {\n      main: 'rgb(226,231,238)'\n    }\n  }\n});\n\nconst App = props => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <Wrapper>\n        <Header />\n        <NowWhat />\n        <ToastContainer />\n      </Wrapper>\n    </Provider>\n  </MuiThemeProvider>\n);\n\nexport default App;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from './sagas';\nimport weatherReducer from './reducers/Weather';\n\nexport default () => {\n  const rootReducer = combineReducers({\n    weather: weatherReducer\n  });\n\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = applyMiddleware(sagaMiddleware);\n  const store = createStore(rootReducer, composeEnhancers(middlewares));\n\n  sagas.forEach(sagaMiddleware.run);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}